<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.group.lab.dao.HotClassMapper" >
  <resultMap id="BaseResultMap" type="com.group.lab.model.HotClass" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="classify_id" property="classifyId" jdbcType="INTEGER" />
    <result column="instruction" property="instruction" jdbcType="VARCHAR" />
    <result column="stick_time" property="stickTime" jdbcType="TIMESTAMP" />
    <result column="create_user" property="createUser" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_user" property="updateUser" jdbcType="VARCHAR" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, classify_id, instruction, stick_time, create_user, create_time, update_user, 
    update_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.group.lab.model.HotClassExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from lab_hot_class
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from lab_hot_class
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from lab_hot_class
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.group.lab.model.HotClassExample" >
    delete from lab_hot_class
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.group.lab.model.HotClass" >
    insert into lab_hot_class (id, classify_id, instruction, 
      stick_time, create_user, create_time, 
      update_user, update_time)
    values (#{id,jdbcType=INTEGER}, #{classifyId,jdbcType=INTEGER}, #{instruction,jdbcType=VARCHAR}, 
      #{stickTime,jdbcType=TIMESTAMP}, #{createUser,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateUser,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.group.lab.model.HotClass" >
    insert into lab_hot_class
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="classifyId != null" >
        classify_id,
      </if>
      <if test="instruction != null" >
        instruction,
      </if>
      <if test="stickTime != null" >
        stick_time,
      </if>
      <if test="createUser != null" >
        create_user,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateUser != null" >
        update_user,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="classifyId != null" >
        #{classifyId,jdbcType=INTEGER},
      </if>
      <if test="instruction != null" >
        #{instruction,jdbcType=VARCHAR},
      </if>
      <if test="stickTime != null" >
        #{stickTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null" >
        #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null" >
        #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.group.lab.model.HotClassExample" resultType="java.lang.Integer" >
    select count(*) from lab_hot_class
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update lab_hot_class
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.classifyId != null" >
        classify_id = #{record.classifyId,jdbcType=INTEGER},
      </if>
      <if test="record.instruction != null" >
        instruction = #{record.instruction,jdbcType=VARCHAR},
      </if>
      <if test="record.stickTime != null" >
        stick_time = #{record.stickTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createUser != null" >
        create_user = #{record.createUser,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateUser != null" >
        update_user = #{record.updateUser,jdbcType=VARCHAR},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update lab_hot_class
    set id = #{record.id,jdbcType=INTEGER},
      classify_id = #{record.classifyId,jdbcType=INTEGER},
      instruction = #{record.instruction,jdbcType=VARCHAR},
      stick_time = #{record.stickTime,jdbcType=TIMESTAMP},
      create_user = #{record.createUser,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_user = #{record.updateUser,jdbcType=VARCHAR},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.group.lab.model.HotClass" >
    update lab_hot_class
    <set >
      <if test="classifyId != null" >
        classify_id = #{classifyId,jdbcType=INTEGER},
      </if>
      <if test="instruction != null" >
        instruction = #{instruction,jdbcType=VARCHAR},
      </if>
      <if test="stickTime != null" >
        stick_time = #{stickTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null" >
        create_user = #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null" >
        update_user = #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.group.lab.model.HotClass" >
    update lab_hot_class
    set classify_id = #{classifyId,jdbcType=INTEGER},
      instruction = #{instruction,jdbcType=VARCHAR},
      stick_time = #{stickTime,jdbcType=TIMESTAMP},
      create_user = #{createUser,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_user = #{updateUser,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  
  <!-- 自定义sql -->
  <!-- 获取大分类下的热门品类 -->
  <select id="selectHotClass" resultType="java.util.Map">
    select a.id,a.classify_id,a.instruction,a.num_iid,b.main_image,b.tbk_shot_url tbkShotUrl,b.tbk_url tbkUrl,b.price from 
	(
		select t1.id,t1.classify_id,t1.instruction,
	  	(select num_iid from lab_area_fashions where area_type = 'hotClass' and area_id = t1.id LIMIT 1) num_iid
		from lab_hot_class t1 left join lab_fashion_classify t2 on t1.classify_id = t2.id
		where t2.parent_name = #{parentName}
	    limit 0,5
	) a 
	left join lab_fashions b on a.num_iid = b.num_iid
  </select>
</mapper>